// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  clerkId          String     @unique
  email            String     @unique
  username         String     @unique
  first_name       String
  last_name        String
  roles            String[]   @default(["buyer"])  // Store all roles
  activeRole       String     @default("buyer")    // Currently selected role
  rolePermissions  Json?      // Store role-specific permissions
  investorProfile  Json?      // For investor-specific data
  tenantProfile    Json?      // For tenant-specific data
  agentLicense     String?    // For agent verification
  lastRoleUpdate   DateTime?  // Track when roles were last updated
  onboardingComplete Boolean  @default(false)
  image            String?
  bookedViewings   Json[]     @default([])
  favPropertiesID  String[]   @default([]) @db.ObjectId
  ownedProperties  Property[] @relation("Owner")
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  @@map("users")
  @@index([activeRole, clerkId, roles]) // Combine all indexes into one
}

model Property {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Int
  address     String
  image       String
  city        String
  country     String
  area        Int?     
  facilities  Json[]   @default([])
  ownerEmail  String
  owner       User     @relation("Owner", fields: [ownerEmail], references: [email])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([address, ownerEmail])
}
